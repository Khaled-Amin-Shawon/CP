{
	"floyd": {
		"prefix": "floyd",
		"body": [
			"/*",
			"||-----------------------------------||",
			"||       Khaled  Amin  Shawon        ||",
			"||         Big Khaled code           ||",
			"||-----------------------------------||",
			"*/",
			"#include <bits/stdc++.h>",
			"#define ll long long",
			"#define no cout << \"NO\" << endl;",
			"#define yes cout << \"YES\" << endl;",
			"#define fr(i, n) for (ll i = 0; i < n; i++)",
			"#define fr1(i, n) for (ll i = 1; i <= n; i++)",
			"#define fast                      \\",
			"    ios_base::sync_with_stdio(0); \\",
			"    cin.tie(NULL);",
			"using namespace std;",
			"#define INF 999",
			"",
			"int solve() {",
			"  int v,e;",
			"  cout << \"Enter the number of vertices and edges: \";",
			"  cin >> v>>e;",
			"  int graph[v][v];",
			"",
			"  for (int i = 0; i < v; i++)",
			"    for (int j = 0; j < v; j++)",
			"    if (i == j) graph[i][j] = 0;",
			"    else graph[i][j] = INF;",
			"  for (int i = 0; i < e; i++)",
			"  {",
			"    int x, y, w;",
			"    cout << \"Enter the edge and weight: \";",
			"    cin >> x >> y >> w;",
			"    graph[x][y] = w;",
			"  }",
			"  int matrix[v][v];",
			"",
			"  for (int i = 0; i < v; i++)",
			"    for (int j = 0; j < v; j++)",
			"      matrix[i][j] = graph[i][j];",
			"  // print",
			"  for (int i = 0; i < v; i++) {",
			"    for (int j = 0; j < v; j++) {",
			"      if (matrix[i][j] == INF)",
			"        printf(\"%4s\", \"INF\");",
			"      else",
			"        printf(\"%4d\", matrix[i][j]);",
			"    }",
			"    printf(\"\\n\");",
			"    }",
			"  ",
			"// relaxzation ",
			"  for (int k = 0; k < v; k++) {",
			"    for (int i = 0; i < v; i++) {",
			"      for (int j = 0; j < v; j++) {",
			"        if (matrix[i][k] + matrix[k][j] < matrix[i][j])",
			"          matrix[i][j] = matrix[i][k] + matrix[k][j];",
			"      }",
			"    }",
			"  }",
			"  // print",
			"  for (int i = 0; i < v; i++) {",
			"    for (int j = 0; j < v; j++) {",
			"      if (matrix[i][j] == INF)",
			"        printf(\"%4s\", \"INF\");",
			"      else",
			"        printf(\"%4d\", matrix[i][j]);",
			"    }",
			"    printf(\"\\n\");",
			"    }",
			"}",
			"int main()",
			"{",
			"    fast;",
			"    ll t = 1;",
			"    //cin >> t;",
			"    while (t--)",
			"    {",
			"        solve();",
			"    }",
			"}",
			"/*int graph[nV][nV] = {{0, 3, INF, 5},",
			"                      {2, 0, INF, 4},",
			"                      {INF, 1, 0, INF},",
			"                      {INF, INF, 2, 0}};*/"
		],
		"description": "floyd"
	}
}